/********************************************************************/
/**                                                                **/
/**  Simple IF LASH (SIFLASH) compiler -- v0.9                      **/
/**  =====================================                         **/
/**                                                                **/
/**   grammar.h  :  Tables defining the syntax of the language     **/
/**                 being compiled. This file has been generated   **/
/**                 by the program 'grammar-generate'.             **/
/**  Copyright (c) 1998-2002, Universite de Liege (ULg). All       **/
/**  rights reserved. This package is provided for evaluation      **/
/**  purposes and educational use only. No guarantee is expressed  **/
/**  or implied by the distribution of this software. The          **/
/**  commercial use and the redistribution of this product or of   **/
/**  any part of it are not permitted without our prior, express,  **/
/**  and written consent.                                          **/
/**                                                                **/
/********************************************************************/

#define NB_SYMB    315
#define NB_TERM    123
#define NB_PROD    376

static uint4  l_table[NB_SYMB] = {
  0,   1,   2,   3,   4,   5,   6,   7,   8,   8,   7,   9,  10,  11,  12, 
 13,  14,   4,  15,  16,  17,  18,  15,  19,  20,  21,  20,  22,  15,  15, 
 20,  15,  15,  22,  13,  23,  24,  25,  26,   7,   8,  27,  28,   3,   3, 
  6,   8,  29,   8,  13,   7,   6,  13,  15,   3,  30,  31,  11,  26,   3, 
 32,  33,  26,  26,  34,   3,  35,  25,  36,  13,   3,   8,  13,  26,   3, 
  7,  37,  15,  15,  13,  13,   6,  11,  18,   4,  38,  26,   6,  30,  37, 
 39,  40,  13,  25,  41,  18,  13,  13,  20,   3,  42,  42,   8,  20,   4, 
 20,  13,  18,  16,   7,   3,  43,   6,  25,  13,  26,  42,  26,   8,   6, 
  6,   6,  13,  44,  45,  15,  46,  46,  46,  46,  47,  47,  47,  47,  47, 
 48,  13,  30,  49,  50,  51,  52,  47,  18,  31,  53,  25,  15,  54,  30, 
 13,  55,  56,  27,  57,  58,  59,  13,  60,  61,  60,  62,  21,  63,  64, 
 65,  66,  67,  65,  68,  69,  70,  13,  71,  72,  73,  74,  75,  76,  77, 
 78,  78,  79,  22,  65,  15,  80,  15,  81,  82,   6,  15,  22,  22,  22, 
 15,  83,  84,  19,  85,  86,  87,  88,  13,  89,  13,  13,  90,  13,  55, 
 15,   6,  91,  81,  82,   6,  92,  93,   6,  94,  13,  81,  82,   6,  15, 
 13,  81,  82,   6,  15,  18,  53,  95,  32,  95,  96,  13,  97,  55,  13, 
 52,  98,  52,  99,  26,  52,  98,  52,  99,  26, 100,  82,  30,  15, 101, 
102,  15,  52, 103, 104,  15, 105,  13, 106,  18, 106,  99, 107, 108,  30, 
 15,  18,  99, 107, 109,  13, 110,  15,  82,  13, 111, 111, 112,  18,   6, 
 81,   6, 113, 113, 113,   2, 113,   2, 114, 115, 116, 117,   3,   3, 118, 
  3, 119, 120, 121,   3,   6, 122,   6,   6,  15, 123, 124, 125,  15, 126 };


static uint1  sr_table[][(NB_TERM + 3) / 4] = {
{   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  16,   0,   0,   0,  64 },
{   0,   0,   0,   0,   0,   0,   2,   0,   0,   0,   0,   0,   0,   0,   0,   0,   2,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 },
{  16,   0,   0,   1,   0,   0,   0,   0,   0,   4,   0,   0,   0,   0,   1,   0,  65,   1,   0,   0,   0,   0,   0,   4,   0,   0,   0,   0,   4,   0,   0 },
{  16,   0,   0,   1,   0,   0,   0,   0,   0,   4,   0,   0,   0,   0,   1,   4,  65,   1,   0,   1,   0,   0,   0,   4,   0,   0,   0,   0,   4,   0,   0 },
{   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   4,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 },
{  32,   0,   8,   2,   0,   0,   0,   0,   0,   8,   2,   0,   0, 128,   2,   8, 130,   2,   0,   2,   0,   0,   0,   8,   0,   0,   0,   0,   8,   0,   0 },
{  16,   0,   0,   1,   0,   0,   0,   0,   0,   4,   0,   0,   0,  64,   1,   4,  65,   1,   0,   1,   0,   0,   0,   4,   0,   0,   0,   0,   4,   0,   0 },
{   0,   0,   0,  32,   0,   0,   0,   0,   0,   2,   0,   0,   0,   0,   0,   0,   0,   0,   0,  40,   0,   0,  40,  32,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   2,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,   0,   0,   0,   0,   0,   2,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 },
{ 128,   8,   8,  42, 130,  10,   8, 128,   0,  10, 130, 138, 136,  34, 136,   8, 170,  32,  34,  42,  40, 128, 160, 170, 160, 160, 128, 162,   8,   0,  10 },
{  32,   0,   0,   2,   0,   0,   0,   0,   0,   8,   0,   0,   0, 128,   2,   8, 130,   2,   0,   2,   0,   0,   0,   8,   0,   0,   0,   0,   8,   0,   0 },
{  32, 128,  32,   2,   0,   0,   0,   0,   0, 136,   0,  32,  34, 128,   2,   8, 130, 130, 128,   2,   0,   0,   0,   8,   0,   0,   0,   8,   8,   0,   0 },
{   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,   0,   0,  16,  16,   0,   0,   0,   0,   0,   0,   0,   4,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  16,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,   4,   1,   0,   0,   0,   0,   0,   4,   1,  68,  64,   0,   0,   0,  65,   0,   1,   0,   0,  64,   0,  68,  16,   0,  64,   0,   4,   0,   4 },
{   0,   0,   0,   2,   0,   0,   0,   0,   0,   8,   0,   0,   0,   0,   0,   0, 130,   0,   0,   0,   0,   0,   0,   8,   0,   0,   0,   0,   8,   0,   0 },
{   0,   0,   0,   1,   0,   0,   0,   0,   0,   4,   0,   0,   0,   0,   0,   0,  65,   0,   0,   0,   0,   0,   0,   4,   0,   0,   0,   0,   4,   0,   0 },
{   0,   0,   4,   1,   0,   0,  64,   0,   0,   4,   1,  68,  64,   0,   0,   0,  65,   0,   1,   0,   0,  64,   0,  68,  16,   0,  64,   0,   4,   0,   4 },
{   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  32,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,   8,   2,   2,   0,   0, 128,   0,   8,   2, 136, 136,   2,   0,   0, 162,   0,   2,   0,   8, 128,   0, 138,  32, 160, 128,   0,  10,   0,  10 },
{   0,   0,   8,   2,   0, 128, 128,   0,   8,   8,   2, 136, 128,   0,   0,   0, 162,   0,   2,   0,   0, 128,   0, 136,  32, 128, 128,   0,   8,   0,   8 },
{   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  32,   0,   0,   0, 128,   0,   0,  32 },
{  40,   2,   0,   2,   0,   0,   0,   0,  32,   8,   0,   0,   0,   0,   2,   8, 130,   2,   0,   2, 128,   8,   0,   8,   0,   0,   2,   0,   8,   0,   0 },
{ 128,   8,   8,  42, 130,  10,   8, 128,   0,  10, 130, 138, 136,  34, 136,   8, 170,  32,  34,   2,  40, 128, 160, 170, 160, 160, 128, 162,   8,   0,  10 },
{   0,   0,   0,   0,   8,   0,   0,   0,   0,  32,  32,   0,   0,   0,  32, 160,   0,   0,   8,   0,   0,  34,   0,   0,   0,   0,   0,   0, 128,   8,   0 },
{   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  16,   1,   0,   0,   0,   1,  64,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,   0,   0,   0,   0,   0,   0,  64,   0,   0,   0,   0,   0,   0,   0,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   4,   0,   0,   0,   0 },
{   0,  64,  16,   0,   0,   0,   0,   0,   0,  64,   0,   0,  16,   0,   0,   0,   1,   0,  64,   0,   0,   0,   0,   0,   0,   0,   0,   4,   0,   0,   0 },
{  32, 128,  32,   2,   0,   0,   0,   0,   0, 136,   0,   0,  32, 128,   2,   8, 130,   2, 128,   2,   0,   0,  32,   8,   0,   0,   0,   8,   8,   0,   0 },
{   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  16,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 },
{  32,   0,   0,   2,   0,   0,   0,   0,   0,   8,   0,   0,   0,   0,   2,   8, 130,   2,   0,   2,   0,   0,   0,  40,   0,   0,   0,   0,   8,   0,   0 },
{ 128, 136,  42,  42, 130,  10,  40, 128,   0, 138, 130, 138, 168,  34, 137,   8, 170,  32, 162,  42,  40, 128, 164, 170, 160, 170, 128, 170,   8,   2,  42 },
{   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   4,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,   0,   1,   0,   0,   0,   0,   0,   4,   0,   0,   0,   0,   1,   0,  65,   1,   0,   0,   0,   0,   0,   4,   0,   0,   0,   0,   4,   0,   0 },
{  32,   0,   0,   2,   0,   0,   0,   0,   0,   8,   0,   0,   0,   0,   2,   8, 130,   2,   0,   2,   0,   0,   0,   8,   0,   0,   0,   0,   8,   0,   0 },
{   0,   0,   0,   0,   0,   0,   0,  32,   0,   0,   0,   0,   0,   0,   0,   0,   2,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 },
{ 128,   8,   8,  42, 138,   0,   8, 128,   0,  42, 162, 138, 136,  34, 160, 168, 170,  32,  42,   2,  40, 162, 160, 170, 160, 160, 128, 162, 136, 136,  10 },
{ 128,   8,   8,  42, 138,   2,   8, 128,   0,  42, 162, 138, 136,  34, 168, 168, 170,  40,  42,   2,  40, 162, 160, 170, 160, 160, 128, 162, 136,   8,  10 },
{   2,  32, 136, 130,   2, 128, 130, 170,  10,   8,  10, 136, 136,   2,   0,   2, 162,   0,   2, 128,  10, 128,   2, 138,  42, 160, 128,   0,  42,  32,  10 },
{   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  32,   0,  10,   0,   0,   0,   2,   0 },
{  32,   0,   0,   2,   0,   0,   0,   0,  64,   8,   0,   0,   0, 128,   2,   8, 130,   2,   0,   2,   0,   0,   0,   8,   0,   0,   0,   0,   8,   0,   0 },
{   2,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,   0,  64,   0,   0,   0,   0,   1,   0,   0,   0,   0,   0,   0,   1,   0,   0,   0,  64,   1,   0,   0,   0,   5,   0,   0,   0,  16,  16,   0 },
{   0,   0,   0, 128,   0,   0,   0,   0,   2,   0,   0,   0,   0,   0,   0,   2,   0,   0,   0, 128,   2,   0,   0,   0,  10,   0,   0,   0,  32,  32,   0 },
{   0,   0,   0, 128,   0,   0,   0,   8,   2,   0,   0,   0,   0,   0,   0,   2,   0,   0,   0, 128,   2,   0,   0,   0,  10,  32,   0,   0,  32,  32,   0 },
{   0,   0,   0,  32,   0,   0,   0,   0,   0,   2,   0,   0,   0,   0,   0,   0,   0,   0,   0,  40,   0,   0,  36,  32,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,  40,   0,   0,   0,  32,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,   0,   0,   0,  16,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,   0,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   4,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,   0,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  16,   0,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,   0, 128,   0,   0,   0,   8,   0,   0,   4,   0,   0,   0,   0,   2,   0,   0,   0, 128,   0,   0,   0,   0,   0,  32,   0,   0,  32,  32,   0 },
{   0,   0,   0,  16,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  16,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0, 128, 128,   0,   0,   0,  10,   0,   0,   0,   0,   0,   0,   0,   2,   0,   0,   0, 128,   0,   0,   2,   0,   0,  32,   0,   0,  32,  32,   0 },
{   0,   0,   0, 128,   0,   0,   0,   8,   0,   0,   0,   0,   0,   0,   0,   2,   0,   0,   0, 128,   0,   0,   0,   0,   0,  32,   0,   0,  32,  32,   0 },
{   0,   0,   0,  64,   0,   0,   0,   4,   0,   0,   0,   0,   0,   0,   0,   1,   0,   0,   0,  64,   0,   0,   0,   0,   0,  16,   0,   0,  16,  16,   0 },
{   0,   0,   8, 130,   2,   0,   0, 136,   0,   8,   2, 136, 136,   2,   0,   2, 162,   0,   2, 128,   8, 128,   0, 136,  32, 160, 128,   0,  40,  32,  10 },
{   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  16,   0,   5,   0,   0,   0,   1,   0 },
{   0,  16,   8,   2,   2,   0,   0, 128,   0,   8,   2, 136, 136,   2,   0,   0, 162,   0,   2,   0,   8, 128,   0, 138,  32, 160, 128,   0,  10,   0,  10 },
{   0,   0,   8,   2,   2,   0,   0, 128,   0,   8,   2, 136, 136,   2,   0,   0, 162,   0,   2,   0,   8, 128,   0, 138,  32, 160, 128,   0,   9,   0,  10 },
{   0,   0,   8,   2,   2,   0,   0, 128,   0,   8,   2, 136, 136,   2,   0,   0, 162,   0,   2,   0,   8, 128,   0, 137,  32, 160, 128,   0,   8,   0,  10 },
{   0,   0,   8,   2,   2,   0,   0, 128,   0,   8,   2, 136, 136,   2,   0,   0, 162,   0,   2,   0,   8, 128,   0, 138,  32, 160, 128,   0,   8,   0,  10 },
{   0,   0,   8,   2,   2,   0,   0, 128,   0,   8,   2, 136, 136,   2,   0,   0, 162,   0,   2,   0,   8, 128,   0, 136,  32, 160, 128,   0,   8,   0,  10 },
{   0,   0,   8,  18,   2,   0,   0, 128,   0,   8,   2, 136, 136,   2,   0,   0, 162,   0,   2,   0,   8, 128,   0, 136,  32, 160, 128,   0,   8,   0,  10 },
{   0,   0,   4,   1,   1,   0,   0,  64,   0,   4,   1,  68,  68,   1,   0,   0,  81,   0,   1,   0,   4,  64,   0,  68,  16,  80,  64,   0,   4,   0,   5 },
{   0,   0,   0,   0,   0,   0,   4,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,   8,  34, 130,   0,   8, 128,   0,   8,   2, 136, 136,   2,   0,   0, 162,   0,   2,   0,   8, 128, 160, 170,  32, 160, 128, 130,   8,   0,  10 },
{   0,   0,   8,  34,   2,   0,   0, 128,   0,   8,   2, 136, 136,   2,   0,   0, 162,   0,   2,   0,   8, 128,   0, 136,  32, 160, 128,   0,   8,   0,  10 },
{   0,   0,   8,   2,   0,   0,   0,   0,   0,   8,   2, 136, 136,   0,   0,   0, 162,   0,   2,   0,   4, 128,   0, 136,  32, 128, 128,   0,   8,   0,  10 },
{   0,   0,   8,   2,   1,   0,   0,   0,   0,   8,   2, 136, 136,   0,   0,   0, 162,   0,   2,   0,   8, 128,   0, 136,  32, 128, 128,   0,   8,   0,  10 },
{   0,   0,   8,   2,   0,   0,   0,   0,   0,   8,   2, 136, 136,   0,   0,   0, 162,   0,   2,   0,   8, 128,   0, 136,  32, 128, 128,   0,   8,   0,  10 },
{   0,   0,   8,   2,   0,   0,   0,   0,   0,   8,   2, 136, 136,   0,   0,   0, 162,   0,   2,   0,   0, 128,   0, 136,  32, 128, 128,   0,   8,   0,   9 },
{   0,   0,   8,   2,   0,   0,   0,   0,   0,   8,   2, 136, 136,   0,   0,   0, 162,   0,   2,   0,   0, 128,   0, 136,  32, 128, 128,   0,   8,   0,  10 },
{   0,   0,   8,   2,   0,   0,   0,   0,   0,   8,   2, 136, 132,   0,   0,   0, 162,   0,   2,   0,   0, 128,   0, 136,  32, 128, 128,   0,   8,   0,   8 },
{   0,   0,   8,   2,   0,   0,   0,   0,   0,   8,   2, 136, 136,   0,   0,   0, 162,   0,   2,   0,   0, 128,   0, 136,  32, 128, 128,   0,   8,   0,   8 },
{   0,   0,   8,   2,   0,   0,   0,   0,   0,   8,   2, 136, 128,   0,   0,   0, 162,   0,   2,   0,   0, 128,   0, 136,  32, 128, 128,   0,   8,   0,   8 },
{   0,   0,   4,   1,   0,   0,   0,   0,   0,   4,   1,  68,  64,   0,   0,   0,  81,   0,   1,   0,   0,  64,   0,  68,  16,  64,  64,   0,   4,   0,   4 },
{   0,   0,   0,  16,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  80,  16,   0,   0,   0,   0,   0,   0,   0 },
{  16,   0,   0,   1,   0,   0,   0,   0,   0,   4,   0,   0,   0,  64,   1,   4,  65,   1,   0,   1,   0,   0,  16,   4,   0,   0,   0,   0,   4,   0,   0 },
{   0,   0,   0,  16,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  16,   0,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   0,   0,   0 },
{   0,   0,   4,   1,   0,  64,  64,   0,   0,   4,   1,  68,  64,   0,   0,   0,  65,   0,   1,   0,   0,  64,   0,  68,  16,   0,  64,   0,   4,   0,   4 },
{   0,   0,   0,   0,  64,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,   4,   1,   0,   0,   0,   0,   4,   4,   1,  68,  64,   0,   0,   0,  65,   0,   1,   0,   0,  64,   0,  68,  16,   0,  64,   0,   4,   0,   4 },
{   0,   0,   2,  32,   0,   2,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 128,   0,   0,   0 },
{   0,   0,   2,  32,   0,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,   1,  16,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,   0,  16,   0,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  16,   0,   0,   0,   0,   0,   0,   0 },
{  32,   0,   4,   2,   0,   0,   0,   0,   0,   8,   1,   0,   0, 128,   2,   8, 130,   2,   0,   2,   0,   0,   0,   8,   0,   0,   0,   0,   8,   0,   0 },
{   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  32,   0,   0,   0, 128,   0,  64,   0 },
{   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  32,   0,   0,   0,  64,   0,   0,   0 },
{ 128,   4,   8,  42, 130,   0,   8, 128,   0,  10, 130, 138, 136,  34, 128,   8, 170,  32,  34,   2,  40, 128, 160, 170, 160, 160, 128, 162,   8,   0,  10 },
{   0,   0,   0,   0,   4,   0,   0,   0,   0,  16,  32,   0,   0,   0,  16,  80,   0,   0,   4,   0,   0,  17,   0,   0,   0,   0,   0,   0,  64,   4,   0 },
{   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  64,   0,   0,   0 },
{   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  16,   0,   0,   0,   0,   0,   0,  16 },
{   0,   0,   0,  16,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  64,   0,   0,   0,   0,   0,   0,   0,   0 },
{   0,  64,  16,   0,   0,   0,   0,   0,   0,  64,   0,   0,  16,   0,   0,   0,   1,   0,  64,   0,   0,   0,  16,   0,   0,   0,   0,   4,   0,   0,   0 },
{   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  16,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,   0,   1,   0,   0,   0,   0,   0,   4,   0,   0,   0,   0,   0,   4,  65,   0,   0,   0,   0,   0,   0,   4,   0,   0,   0,   0,   4,   0,   0 },
{   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 },
{   4,   1,   0,   0,   0,   0,   0,   0,  16,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  64,   4,   0,   0,   0,   0,   1,   0,   0,   0,   0 },
{   0,   0,   0,  16,   0,   0,  16,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,   0,   0,   0,   4,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   4,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,   0,   0,   0,   0,   0,  16,   0,   0,   0,   0,   0,   0,   0,   0,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,   0,   0,   0,   0,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   0,   0,   0,   0,   0,  16,   0,   0,   0,   0,   0,   0,   0,   0 },
{ 128,   8,   8,  42, 130,   2,   8, 128,   0,  10, 130, 138, 136,  34, 136,   8, 170,  32,  34,   2,  40, 128, 160, 170, 160, 160, 128, 162,   8,   0,  10 },
{ 128,   8,   8,  42, 130,   1,   8, 128,   0,  10, 130, 138, 136,  34, 132,   8, 170,  32,  34,   2,  40, 128, 160, 170, 160, 160, 128, 162,   8,   0,  10 },
{ 128,   0,   8,  42, 130,   0,   8, 128,   0,  10, 130, 138, 136,  34, 128,   8, 170,  32,  34,   2,  40, 128, 160, 170, 160, 160, 128, 162,   8,   0,  10 },
{ 128,   0,   8,  42, 130,   0,   8, 128,   0,  10, 130, 138, 136,  34, 128,   8, 170,  32,  34,   2,  40, 128, 160, 170, 160, 160, 128, 146,   8,   0,  10 },
{ 128,   0,   8,  42, 130,   0,   8, 128,   0,  10, 130, 138, 136,  34, 128,   8, 170,  32,  34,   2,  40, 128, 160, 170,  96, 160, 128, 130,   8,   0,  10 },
{ 128,   0,   8,  42, 130,   0,   8, 128,   0,  10, 130, 138, 136,  34, 128,   8, 170,  32,  18,   2,  40, 128, 160, 170,  32, 160, 128, 130,   8,   0,  10 },
{ 128,   0,   8,  42, 130,   0,   8, 128,   0,  10, 130, 138, 136,  34, 128,   4, 170,  32,   2,   1,  40, 128, 160, 170,  32, 160, 128, 130,   8,   0,  10 },
{ 128,   0,   8,  42, 130,   0,   8, 128,   0,   9,  66, 137, 136,  18,  64,   0, 166,  32,   2,   0,  40, 128, 160, 170,  32, 160, 128, 130,   8,   0,  10 },
{  64,   0,   8,  42, 130,   0,   8, 128,   0,   8,   2, 136, 136,   2,   0,   0, 162,  32,   2,   0,  40, 128, 160, 170,  32, 160, 128, 130,   8,   0,  10 },
{   0,   0,   8,  42, 130,   0,   8, 128,   0,   8,   2, 136, 136,   2,   0,   0, 162,  16,   2,   0,  40, 128, 160, 170,  32, 160, 128, 130,   8,   0,  10 },
{   0,   0,   8,  42, 130,   0,   8, 128,   0,   8,   2, 136, 136,   2,   0,   0, 162,   0,   2,   0,  24, 128, 160, 170,  32, 160, 128, 130,   8,   0,  10 },
{   0,   0,   0,   4,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0, 128,   0,   0,   0,   0,   2,   0,   0,   4,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   2,   0,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0, 128,   0,   0,   0,   0,   2,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   0,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,  64,   0,   0,   0,   0,   2,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 },
{   0,   0,   0,   0,   0,   0,   0,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 }};

static uint4  start_rule[NB_SYMB] = {
  0 ,   0 ,   0 ,   0 ,   0 ,   1 ,   0 ,   2 ,   3 ,   4 ,   6 ,   7 , 
  8 ,  24 ,  25 ,   0 ,   0 ,   0 ,   0 ,   0 ,  42 ,   0 ,   0 ,   0 , 
 45 ,  46 ,  47 ,  48 ,   0 ,   0 ,  51 ,   0 ,   0 ,  52 ,   0 ,  53 , 
 55 ,  59 ,  60 ,  62 ,  63 ,   0 ,   0 ,   0 ,   0 ,   0 ,  65 ,   0 , 
 66 ,   0 ,  67 ,   0 ,   0 ,   0 ,   0 ,   0 ,  68 ,  70 ,  75 ,   0 , 
  0 ,  77 ,  82 ,  84 ,  86 ,   0 ,   0 , 132 ,   0 ,   0 ,   0 , 133 , 
  0 , 134 ,   0 , 136 , 137 ,   0 ,   0 ,   0 ,   0 ,   0 , 139 ,   0 , 
  0 , 140 , 141 ,   0 ,   0 , 143 , 145 , 163 ,   0 , 168 , 169 ,   0 , 
  0 ,   0 , 204 ,   0 , 205 , 207 , 209 , 210 ,   0 , 211 ,   0 ,   0 , 
  0 , 212 ,   0 , 213 ,   0 , 215 ,   0 , 216 , 218 , 220 , 222 ,   0 , 
  0 ,   0 ,   0 ,   0 ,   0 ,   0 , 223 , 224 , 225 , 226 , 227 , 229 , 
231 , 233 , 235 , 237 ,   0 ,   0 , 243 ,   0 ,   0 ,   0 , 244 ,   0 , 
245 ,   0 , 254 ,   0 , 263 ,   0 ,   0 ,   0 , 264 ,   0 , 266 ,   0 , 
267 ,   0 ,   0 , 269 ,   0 , 270 , 271 , 272 , 273 , 274 , 275 ,   0 , 
276 ,   0 , 277 , 296 ,   0 , 297 , 298 , 299 , 301 , 302 , 304 , 305 , 
307 , 308 ,   0 , 310 , 318 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 , 
320 , 321 , 322 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 , 323 , 325 ,   0 , 
  0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 , 326 ,   0 ,   0 ,   0 , 
328 , 329 ,   0 , 330 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 , 
  0 ,   0 ,   0 ,   0 , 331 ,   0 , 332 ,   0 ,   0 ,   0 ,   0 ,   0 , 
  0 ,   0 ,   0 ,   0 , 333 ,   0 ,   0 ,   0 ,   0 , 335 ,   0 ,   0 , 
  0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 , 
  0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 , 
  0 ,   0 ,   0 ,   0 , 337 , 338 , 340 ,   0 ,   0 ,   0 ,   0 , 341 , 
343 , 345 ,   0 , 348 ,   0 , 350 , 352 , 354 , 357 ,   0 ,   0 , 364 , 
  0 , 366 , 368 , 370 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 , 373 , 374 , 
375 ,   0 ,   0  };

static uint4  end_rule[NB_SYMB] = {
  0 ,   0 ,   0 ,   0 ,   0 ,   1 ,   0 ,   2 ,   3 ,   5 ,   6 ,   7 , 
 23 ,  24 ,  41 ,   0 ,   0 ,   0 ,   0 ,   0 ,  44 ,   0 ,   0 ,   0 , 
 45 ,  46 ,  47 ,  50 ,   0 ,   0 ,  51 ,   0 ,   0 ,  52 ,   0 ,  54 , 
 58 ,  59 ,  61 ,  62 ,  64 ,   0 ,   0 ,   0 ,   0 ,   0 ,  65 ,   0 , 
 66 ,   0 ,  67 ,   0 ,   0 ,   0 ,   0 ,   0 ,  69 ,  74 ,  76 ,   0 , 
  0 ,  81 ,  83 ,  85 , 131 ,   0 ,   0 , 132 ,   0 ,   0 ,   0 , 133 , 
  0 , 135 ,   0 , 136 , 138 ,   0 ,   0 ,   0 ,   0 ,   0 , 139 ,   0 , 
  0 , 140 , 142 ,   0 ,   0 , 144 , 162 , 167 ,   0 , 168 , 203 ,   0 , 
  0 ,   0 , 204 ,   0 , 206 , 208 , 209 , 210 ,   0 , 211 ,   0 ,   0 , 
  0 , 212 ,   0 , 214 ,   0 , 215 ,   0 , 217 , 219 , 221 , 222 ,   0 , 
  0 ,   0 ,   0 ,   0 ,   0 ,   0 , 223 , 224 , 225 , 226 , 228 , 230 , 
232 , 234 , 236 , 242 ,   0 ,   0 , 243 ,   0 ,   0 ,   0 , 244 ,   0 , 
253 ,   0 , 262 ,   0 , 263 ,   0 ,   0 ,   0 , 265 ,   0 , 266 ,   0 , 
268 ,   0 ,   0 , 269 ,   0 , 270 , 271 , 272 , 273 , 274 , 275 ,   0 , 
276 ,   0 , 295 , 296 ,   0 , 297 , 298 , 300 , 301 , 303 , 304 , 306 , 
307 , 309 ,   0 , 317 , 319 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 , 
320 , 321 , 322 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 , 324 , 325 ,   0 , 
  0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 , 327 ,   0 ,   0 ,   0 , 
328 , 329 ,   0 , 330 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 , 
  0 ,   0 ,   0 ,   0 , 331 ,   0 , 332 ,   0 ,   0 ,   0 ,   0 ,   0 , 
  0 ,   0 ,   0 ,   0 , 334 ,   0 ,   0 ,   0 ,   0 , 336 ,   0 ,   0 , 
  0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 , 
  0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 , 
  0 ,   0 ,   0 ,   0 , 337 , 339 , 340 ,   0 ,   0 ,   0 ,   0 , 342 , 
344 , 347 ,   0 , 349 ,   0 , 351 , 353 , 356 , 363 ,   0 ,   0 , 365 , 
  0 , 367 , 369 , 372 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 , 373 , 374 , 
375 ,   0 ,   0  };

static uint4  derivation[NB_PROD][2] = {
{  0,   0} , {  0, 219} , {  0,   0} , {  0, 204} , {  0,   0} , 
{  0, 212} , {  0,   0} , {  0, 312} , {  0,   0} , {263,  21} , 
{265,  21} , {  0,  83} , {  0, 140} , {  0, 141} , {  0, 143} , 
{  0, 230} , {  0, 240} , {  0, 242} , {  0, 245} , {  0, 247} , 
{  0, 255} , {  0, 257} , {  0, 264} , {  0, 271} , {  0, 306} , 
{  0, 151} , {  0, 166} , {285, 186} , {286, 186} , {  0, 189} , 
{  0, 204} , {  0, 207} , {  0, 209} , {  0, 214} , {  0, 222} , 
{  0, 227} , {  0, 238} , {  0, 241} , {  0, 246} , {  0, 251} , 
{  0, 261} , {  0, 278} , {  0, 202} , {  0, 207} , {  0, 282} , 
{  0, 274} , {  0, 169} , {  0, 261} , {197,  23} , {  0, 197} , 
{  0, 198} , {  0, 268} , {  0, 200} , {233,  42} , {235, 111} , 
{  0,   0} , {  0, 138} , {  0, 254} , {  0, 258} , {  0,   0} , 
{  0,   0} , {  0, 234} , {  0,   0} , {  0,   0} , {  0, 212} , 
{  0,   0} , {  0,   0} , {  0,   0} , {  0,   0} , {  0,  64} , 
{  0,   4} , {  0,  17} , {  0,  84} , {  0, 104} , {  0, 282} , 
{  0,   0} , {  0, 234} , {  0,   0} , {  0,  66} , {  0, 140} , 
{  0, 255} , {  0, 296} , {  0,   0} , {  0, 234} , {  0,   0} , 
{  0, 234} , {  0,   0} , {  0,  15} , {263,  21} , {265,  21} , 
{  0,  34} , {  0,  41} , {  0,  42} , {  0,  52} , {  0,  66} , 
{267,  69} , {273,  69} , {  0,  79} , {  0,  83} , {311,  88} , 
{  0,  92} , {  0, 106} , {  0, 114} , {237, 122} , {  0, 136} , 
{  0, 137} , {  0, 140} , {  0, 143} , {  0, 149} , { 41, 150} , 
{153, 150} , {  0, 153} , {  0, 157} , {  0, 172} , {  0, 203} , 
{  0, 205} , {  0, 206} , {  0, 208} , {  0, 230} , {  0, 236} , 
{  0, 239} , {  0, 250} , {  0, 252} , {  0, 255} , {  0, 262} , 
{  0, 264} , {  0, 268} , {  0, 269} , {  0, 271} , {  0, 274} , 
{  0, 276} , {  0, 279} , {  0,   0} , {  0,   0} , {  0,   0} , 
{  0, 234} , {  0,   0} , {  0,   0} , {  0, 296} , {  0, 303} , 
{  0,   0} , {  0,   0} , {  0, 234} , { 55,  64} , { 55, 135} , 
{  0, 145} , {285, 186} , {286, 186} , {308, 186} , {  0, 188} , 
{  0, 189} , {  0, 213} , {  0, 214} , {  0, 221} , {  0, 222} , 
{  0, 226} , {  0, 227} , {  0, 231} , {  0, 250} , {  0, 251} , 
{  0, 276} , {  0, 278} , {  0, 285} , {284, 186} , {  0, 243} , 
{  0, 248} , {  0, 266} , {  0, 272} , {  0,   0} , { 16,  18} , 
{ 16,  22} , {314,  28} , {155,  29} , {167,  31} , {124,  32} , 
{ 16,  53} , {139,  77} , {139,  78} , {  0, 125} , {  0, 139} , 
{  0, 147} , {  0, 151} , {  0, 158} , {158, 160} , {  0, 185} , 
{ 81, 186} , {  0, 187} , {  0, 191} , {  0, 195} , {  0, 207} , 
{  0, 209} , {  0, 210} , {  0, 224} , {  0, 229} , {  0, 237} , 
{  0, 238} , {  0, 253} , {  0, 254} , {  0, 256} , {259, 260} , 
{  0, 270} , {  0, 277} , {  0, 309} , {  0, 313} , {  0,   0} , 
{  0,   0} , {  0, 160} , {  0,   0} , {  0, 160} , {  0,   0} , 
{  0,   0} , {  0,  47} , {  0,   0} , {  0, 217} , {  0, 235} , 
{  0,   0} , {  0,   0} , {  0, 234} , {  0,   0} , {  0, 160} , 
{  0,   0} , {  0, 234} , {  0,   0} , {  0,   0} , {  0, 124} , 
{  0, 124} , {  0, 124} , {  0, 124} , {  0, 155} , {  0, 124} , 
{  0, 155} , {  0, 124} , {  0, 155} , {  0, 124} , {  0, 155} , 
{  0, 124} , {  0, 155} , {311,  88} , {  0, 137} , {  0, 149} , 
{  0, 250} , {  0, 252} , {  0, 269} , {  0,   0} , {  0,  60} , 
{  0,   0} , {  0,  49} , {  0,  72} , {  0,  80} , {  0,  96} , 
{  0,  97} , {  0, 220} , {  0, 225} , {  0, 275} , {  0,   0} , 
{263,  21} , {265,  21} , {  0,  83} , {  0, 143} , {  0, 230} , 
{  0, 255} , {  0, 264} , {  0, 271} , {  0,   0} , {  0, 148} , 
{  0, 310} , {  0,   0} , {  0, 155} , {  0, 167} , {  0,   0} , 
{  0,   0} , {  0, 159} , {  0,   0} , {  0, 161} , {  0,   0} , 
{  0, 163} , {  0, 167} , {  0,   0} , {  0,   6} , {  0,  45} , 
{  0,  51} , {  0,  87} , {  0, 112} , {216, 119} , {  0, 120} , 
{  0, 121} , {  0, 188} , {  0, 190} , {  0, 211} , {  0, 213} , 
{  0, 215} , {  0, 218} , {  0, 221} , {  0, 223} , {  0, 226} , 
{  0, 228} , {  0,   0} , {  0,   0} , {  0,   0} , {  0,   0} , 
{  0, 174} , {  0,   0} , {  0,   0} , {  0, 173} , {  0,   0} , 
{  0,   0} , {  0, 176} , {  0,   0} , {  0,   0} , {  0, 178} , 
{  0,   0} , {199,  19} , {197,  23} , {196, 108} , {  0, 182} , 
{  0, 197} , {  0, 198} , {  0, 200} , {  0,   0} , {  0, 182} , 
{  0,   0} , {  0,   0} , {  0,   0} , {  0,   0} , {  0, 233} , 
{  0,   0} , {  0,  95} , {  0, 107} , {  0,   0} , {  0,   0} , 
{  0,   0} , {  0,   0} , {  0, 232} , {  0,   0} , {  0, 234} , 
{  0,   0} , {  0, 234} , {  0,   0} , {  0,   0} , {  0, 283} , 
{  0,   0} , {  0,   0} , {  0,  68} , {  0,   0} , {  0,   2} , 
{  0,   0} , {  0, 290} , {  0, 292} , {  0,   0} , {293, 110} , 
{  0,   0} , {294,  99} , {  0,   0} , {295,  74} , {  0,   0} , 
{  0, 297} , {  0, 298} , {  0,   0} , {299,  43} , {299,  44} , 
{299,  54} , {299,  59} , {299,  65} , {299, 300} , {  0,   0} , 
{301,   3} , {  0,   0} , {302,  70} , {  0,   0} , {  0, 304} , 
{  0,   0} , {  0, 305} , {  0, 307} , {  0,   0} , {  0,   0} , 
{  0,   0} };

static uint4  first_symbol[NB_PROD] = {
274 , 212 , 135 , 206 , 220 , 220 , 135 , 314 , 280 , 260 , 266 , 263 , 
139 , 139 , 145 , 231 , 241 , 243 , 246 , 248 , 256 , 256 , 265 , 272 , 
307 , 153 , 172 , 286 , 286 , 190 , 203 , 206 , 206 , 215 , 223 , 228 , 
239 , 242 , 247 , 252 , 262 , 279 , 205 , 208 , 283 , 260 , 162 , 260 , 
193 , 193 , 193 , 260 , 194 , 235 , 237 , 300 , 140 , 255 , 259 , 146 , 
234 , 234 , 135 , 225 , 225 , 150 , 150 , 135 , 308 , 144 , 264 , 240 , 
245 , 271 , 284 , 234 , 234 , 292 , 195 , 141 , 257 , 298 , 234 , 234 , 
234 , 234 , 281 , 254 , 260 , 266 , 261 , 149 , 201 , 185 , 195 , 260 , 
260 , 309 , 263 , 313 , 171 , 125 , 258 , 238 , 137 , 138 , 139 , 145 , 
151 , 149 , 149 , 149 , 158 , 166 , 202 , 204 , 207 , 209 , 231 , 237 , 
238 , 251 , 251 , 256 , 261 , 265 , 269 , 270 , 272 , 275 , 278 , 278 , 
146 , 150 , 234 , 234 , 135 , 290 , 297 , 305 , 268 , 234 , 234 , 304 , 
304 , 147 , 219 , 219 , 287 , 191 , 191 , 216 , 216 , 224 , 224 , 229 , 
229 , 232 , 253 , 253 , 277 , 277 , 219 , 282 , 244 , 249 , 267 , 273 , 
146 , 175 , 175 , 130 , 127 , 156 , 123 , 175 , 131 , 131 , 126 , 131 , 
148 , 152 , 159 , 159 , 174 , 177 , 179 , 181 , 184 , 142 , 142 , 192 , 
192 , 192 , 128 , 128 , 129 , 133 , 133 , 132 , 268 , 274 , 310 , 312 , 
210 , 160 , 160 , 160 , 160 , 157 , 195 , 210 , 135 , 218 , 236 , 146 , 
234 , 234 , 160 , 160 , 234 , 234 , 136 , 124 , 124 , 124 , 124 , 124 , 
155 , 124 , 155 , 124 , 155 , 124 , 155 , 124 , 155 , 313 , 138 , 151 , 
251 , 251 , 270 , 139 , 134 , 285 , 188 , 213 , 143 , 250 , 230 , 221 , 
226 , 276 , 280 , 260 , 266 , 263 , 145 , 231 , 256 , 265 , 272 , 154 , 
154 , 311 , 155 , 155 , 167 , 161 , 163 , 161 , 165 , 163 , 167 , 165 , 
167 , 186 , 169 , 196 , 210 , 210 , 164 , 217 , 187 , 199 , 189 , 189 , 
210 , 214 , 214 , 210 , 222 , 222 , 227 , 227 , 166 , 176 , 173 , 173 , 
173 , 178 , 176 , 176 , 180 , 178 , 178 , 182 , 180 , 180 , 182 , 200 , 
198 , 197 , 182 , 197 , 198 , 200 , 168 , 168 , 183 , 183 , 183 , 202 , 
235 , 204 , 211 , 211 , 217 , 210 , 287 , 233 , 233 , 234 , 234 , 234 , 
234 , 281 , 282 , 282 , 219 , 288 , 287 , 289 , 288 , 291 , 291 , 291 , 
293 , 293 , 294 , 294 , 295 , 295 , 296 , 296 , 296 , 299 , 299 , 299 , 
299 , 299 , 299 , 299 , 301 , 301 , 302 , 302 , 303 , 303 , 170 , 306 , 
170 , 311 , 312 , 314  };

static uint1  rule_len[NB_PROD] = {
  1 ,   2 ,   1 ,   2 ,   1 ,   2 ,   1 ,   2 ,   1 ,   3 ,   3 ,   2 , 
  2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 , 
  2 ,   2 ,   2 ,   3 ,   3 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 , 
  2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 , 
  3 ,   2 ,   2 ,   2 ,   2 ,   3 ,   3 ,   1 ,   2 ,   2 ,   2 ,   1 , 
  1 ,   2 ,   1 ,   1 ,   2 ,   1 ,   1 ,   1 ,   1 ,   2 ,   2 ,   2 , 
  2 ,   2 ,   2 ,   1 ,   2 ,   1 ,   2 ,   2 ,   2 ,   2 ,   1 ,   2 , 
  1 ,   2 ,   1 ,   2 ,   3 ,   3 ,   2 ,   2 ,   2 ,   2 ,   2 ,   3 , 
  3 ,   2 ,   2 ,   3 ,   2 ,   2 ,   2 ,   3 ,   2 ,   2 ,   2 ,   2 , 
  2 ,   3 ,   3 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 , 
  2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 , 
  1 ,   1 ,   1 ,   2 ,   1 ,   1 ,   2 ,   2 ,   1 ,   1 ,   2 ,   3 , 
  3 ,   2 ,   3 ,   3 ,   3 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 , 
  2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   3 ,   2 ,   2 ,   2 ,   2 , 
  1 ,   3 ,   3 ,   3 ,   3 ,   3 ,   3 ,   3 ,   3 ,   3 ,   2 ,   2 , 
  2 ,   2 ,   2 ,   3 ,   2 ,   3 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 , 
  2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   3 ,   2 ,   2 ,   2 ,   2 , 
  1 ,   1 ,   2 ,   1 ,   2 ,   1 ,   1 ,   2 ,   1 ,   2 ,   2 ,   1 , 
  1 ,   2 ,   1 ,   2 ,   1 ,   2 ,   1 ,   1 ,   2 ,   2 ,   2 ,   2 , 
  2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   3 ,   2 ,   2 , 
  2 ,   2 ,   2 ,   1 ,   2 ,   1 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 , 
  2 ,   2 ,   1 ,   3 ,   3 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   1 , 
  2 ,   2 ,   1 ,   2 ,   2 ,   1 ,   1 ,   2 ,   1 ,   2 ,   1 ,   2 , 
  2 ,   1 ,   2 ,   2 ,   2 ,   2 ,   2 ,   3 ,   2 ,   2 ,   2 ,   2 , 
  2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   2 ,   1 ,   1 ,   1 ,   1 , 
  2 ,   1 ,   1 ,   2 ,   1 ,   1 ,   2 ,   1 ,   1 ,   2 ,   1 ,   3 , 
  3 ,   3 ,   2 ,   2 ,   2 ,   2 ,   1 ,   2 ,   1 ,   1 ,   1 ,   1 , 
  2 ,   1 ,   2 ,   2 ,   1 ,   1 ,   1 ,   1 ,   2 ,   1 ,   2 ,   1 , 
  2 ,   1 ,   1 ,   2 ,   1 ,   1 ,   2 ,   1 ,   2 ,   1 ,   2 ,   2 , 
  1 ,   3 ,   1 ,   3 ,   1 ,   3 ,   1 ,   2 ,   2 ,   1 ,   3 ,   3 , 
  3 ,   3 ,   3 ,   3 ,   1 ,   3 ,   1 ,   3 ,   1 ,   2 ,   1 ,   2 , 
  2 ,   1 ,   1 ,   1  };


 /**** Semantic Rules *****/

/*

  0)  <abstract_1>    ::= ABSTRACT
  1)  <left_asgn>     ::= <expr_4> ':='
  2)  <type_id>       ::= BOOLEAN
  3)  <meta_trans_def_4> ::= <meta_trans_def_1> BY
  4)  <call_0>        ::= CALL
  5)  <call_0>        ::= <left_asgn> CALL
  6)  <type_id>       ::= CLOCK
  7)  <procedure_decl_5> ::= <procedure_decl_4> CODE_EXT
  8)  <expr_1>        ::= COEFF
  9)  <type>          ::= <range_1> '..' COEFF
 10)  <array_2>       ::= <array_1b> '..' COEFF
 11)  <range_1>       ::= RANGE COEFF
 12)  <var_decl_4>    ::= <var_decl_4a> COEFF
 13)  <var_decl_4>    ::= <var_decl_4b> COEFF
 14)  <process_decl_1b> ::= <process_decl_1a> COEFF
 15)  <signalroute_decl_1b> ::= <signalroute_decl_1a> COEFF
 16)  <delay_2>       ::= <delay_1> COEFF
 17)  <delay_4>       ::= <delay_3> COEFF
 18)  <rate_2>        ::= <rate_1> COEFF
 19)  <rate_4>        ::= <rate_3> COEFF
 20)  <const_decl_3>  ::= <const_decl_2> COEFF
 21)  <const_decl_3>  ::= <const_decl_3a> COEFF
 22)  <array_1b>      ::= <array_1> COEFF
 23)  <string_2>      ::= <string_1> COEFF
 24)  <expr_17_3>     ::= <expr_17_2> ':'
 25)  <fpar_3>        ::= <fpar_2> ','
 26)  <save_signal_2> ::= <save_signal> ','
 27)  <function_2>    ::= <single_name_(> <single_expression> ','
 28)  <function_2>    ::= <function_2> <single_expression> ','
 29)  <input_3>       ::= <input_2> ','
 30)  <meta_trans_def_2> ::= <meta_trans_def_1> ','
 31)  <meta_trans_def_4> ::= <meta_trans_def_5> ','
 32)  <meta_trans_def_4> ::= <meta_trans_def_6> ','
 33)  <output_3>      ::= <output_2> ','
 34)  <call_2b>       ::= <call_2> ','
 35)  <fork_2b>       ::= <fork_2> ','
 36)  <signalroute_decl_6> ::= <signalroute_decl_5> ','
 37)  <delay_3>       ::= <delay_2> ','
 38)  <rate_3>        ::= <rate_2> ','
 39)  <signal_decl_2b> ::= <signal_decl_2> ','
 40)  <enum_1b>       ::= <enum_1> ','
 41)  <abstract_6>    ::= <abstract_5> ','
 42)  <meta_trans_def_1b> ::= <meta_trans_def_3> '.'
 43)  <meta_trans_def_6b> ::= <meta_trans_def_5> '.'
 44)  <expr_3a>       ::= <expr_3> '.'
 45)  <type>          ::= <abstract_1> ENDABSTRACT
 46)  <assert>        ::= <assert_1> ENDASSERT
 47)  <type>          ::= <enum_1> ENDENUM
 48)  <if>            ::= <if_2> ELSE ENDIF
 49)  <if>            ::= <if_2> ENDIF
 50)  <if>            ::= <if_3> ENDIF
 51)  <type>          ::= <record_1> ENDRECORD
 52)  <while>         ::= <while_2> ENDWHILE
 53)  <signalroute_decl_3> ::= <signalroute_decl_2> FROM ENV
 54)  <signalroute_decl_4> ::= <signalroute_decl_3> TO ENV
 55)  <single_=>      ::= '='
 56)  <var_decl_4a>   ::= <var_decl_3> '='
 57)  <const_decl_2>  ::= <const_decl_1> '='
 58)  <type_decl_2>   ::= <type_decl_1> '='
 59)  <const>         ::= FALSE
 60)  <signalroute_option> ::= FIFO
 61)  <signalroute_option> ::= <signalroute_option> FIFO
 62)  <type_id>       ::= FLOAT
 63)  <fork_0>        ::= FORK
 64)  <fork_0>        ::= <left_asgn> FORK
 65)  <fpar_opt>      ::= IN
 66)  <fpar_opt>      ::= INOUT
 67)  <type_id>       ::= INTEGER
 68)  <single_(>      ::= '('
 69)  <name_(>        ::= NAME '('
 70)  <array_1>       ::= ARRAY '['
 71)  <delay_1>       ::= DELAY '['
 72)  <rate_1>        ::= RATE '['
 73)  <string_1>      ::= STRING '['
 74)  <expr_3_b1>     ::= <expr_3> '['
 75)  <signalroute_option> ::= LOSSY
 76)  <signalroute_option> ::= <signalroute_option> LOSSY
 77)  <single_->      ::= '-'
 78)  <terminator_1>  ::= NEXTSTATE '-'
 79)  <var_decl_4b>   ::= <var_decl_4a> '-'
 80)  <const_decl_3a> ::= <const_decl_2> '-'
 81)  <expr_12_->     ::= <expr_12> '-'
 82)  <signalroute_option> ::= MULTICAST
 83)  <signalroute_option> ::= <signalroute_option> MULTICAST
 84)  <signalroute_option> ::= MULTISET
 85)  <signalroute_option> ::= <signalroute_option> MULTISET
 86)  <expr_2>        ::= NAME
 87)  <const_decl_1>  ::= CONST NAME
 88)  <type>          ::= <range_1> '..' NAME
 89)  <array_2>       ::= <array_1b> '..' NAME
 90)  <enum_1>        ::= ENUM NAME
 91)  <fpar_1>        ::= FPAR NAME
 92)  <from_name>     ::= FROM NAME
 93)  <label_1>       ::= LABEL NAME
 94)  <terminator_1>  ::= NEXTSTATE NAME
 95)  <type>          ::= <array_3> OF NAME
 96)  <type>          ::= <string_3> OF NAME
 97)  <procedure_decl_1> ::= PROCEDURE NAME
 98)  <range_1>       ::= RANGE NAME
 99)  <procedure_decl_4a> ::= <procedure_decl_3> RETURNS NAME
100)  <save_signal_1> ::= SAVE NAME
101)  <system_1a>     ::= SYSTEM NAME
102)  <type_decl_1>   ::= TYPE NAME
103)  <signalroute_decl_5> ::= <signalroute_decl_4> WITH NAME
104)  <var_decl_2>    ::= <var_decl_1> NAME
105)  <var_decl_3>    ::= <var_decl_2> NAME
106)  <var_decl_4>    ::= <var_decl_4a> NAME
107)  <process_decl_1b> ::= <process_decl_1a> NAME
108)  <fpar_2>        ::= <fpar_1> NAME
109)  <fpar_1>        ::= FPAR <fpar_opt> NAME
110)  <fpar_1>        ::= <fpar_3> <fpar_opt> NAME
111)  <fpar_1>        ::= <fpar_3> NAME
112)  <state_decl_2>  ::= <state_decl_1> NAME
113)  <save_signal>   ::= <save_signal_2> NAME
114)  <meta_trans_def_3> ::= <meta_trans_def_2> NAME
115)  <meta_trans_def_1> ::= <meta_trans_def_1b> NAME
116)  <meta_trans_def_5> ::= <meta_trans_def_4> NAME
117)  <meta_trans_def_6> ::= <meta_trans_def_6b> NAME
118)  <signalroute_decl_1b> ::= <signalroute_decl_1a> NAME
119)  <signalroute_decl_4> ::= <signalroute_decl_4a> NAME
120)  <signalroute_decl_5> ::= <signalroute_decl_6> NAME
121)  <signal_decl_2> ::= <signal_decl_1> NAME
122)  <signal_decl_2> ::= <signal_decl_2b> NAME
123)  <const_decl_3>  ::= <const_decl_2> NAME
124)  <enum_1>        ::= <enum_1b> NAME
125)  <array_1b>      ::= <array_1> NAME
126)  <record_2>      ::= <record_1> NAME
127)  <record_3>      ::= <record_2> NAME
128)  <string_2>      ::= <string_1> NAME
129)  <abstract_2>    ::= <abstract_1> NAME
130)  <abstract_5>    ::= <abstract_3> NAME
131)  <abstract_5>    ::= <abstract_6> NAME
132)  <const>         ::= NIL
133)  <fpar_opt>      ::= OUT
134)  <signalroute_option> ::= PEER
135)  <signalroute_option> ::= <signalroute_option> PEER
136)  <type_id>       ::= PID
137)  <single_+>      ::= '+'
138)  <expr_12_+>     ::= <expr_12> '+'
139)  <expr_17_1>     ::= <expr_16> '?'
140)  <record_1>      ::= RECORD
141)  <signalroute_option> ::= RELIABLE
142)  <signalroute_option> ::= <signalroute_option> RELIABLE
143)  <expr_16_1>     ::= '{' NAME '}'
144)  <expr_16_1>     ::= '{' <type_id> '}'
145)  <process_decl_1c> ::= <process_decl_1b> ')'
146)  <expr_4>        ::= <single_name_(> <single_expression> ')'
147)  <expr_4>        ::= <function_2> <single_expression> ')'
148)  <expr_5>        ::= <single_(> <single_expression> ')'
149)  <input_4>       ::= <input_1> ')'
150)  <input_4>       ::= <input_2> ')'
151)  <output_4>      ::= <output_1> ')'
152)  <output_4>      ::= <output_2> ')'
153)  <call>          ::= <call_1> ')'
154)  <call>          ::= <call_2> ')'
155)  <fork>          ::= <fork_1> ')'
156)  <fork>          ::= <fork_2> ')'
157)  <signalroute_decl_1> ::= <signalroute_decl_1b> ')'
158)  <signal_decl_3> ::= <signal_decl_1> ')'
159)  <signal_decl_3> ::= <signal_decl_2> ')'
160)  <abstract_4>    ::= <abstract_3> ')'
161)  <abstract_4>    ::= <abstract_5> ')'
162)  <expr_4>        ::= <single_name_(> ')'
163)  <expr_3>        ::= <expr_3_b1> <single_expression> ']'
164)  <delay>         ::= <delay_4> ']'
165)  <rate>          ::= <rate_4> ']'
166)  <array_3>       ::= <array_2> ']'
167)  <string_3>      ::= <string_2> ']'
168)  <const>         ::= SELF
169)  <deadline>      ::= DEADLINE DELAYABLE ';'
170)  <deadline>      ::= DEADLINE EAGER ';'
171)  <procedure_decl> ::= <procedure_decl_5> ENDPROCEDURE ';'
172)  <process_decl>  ::= <process_decl_3> ENDPROCESS ';'
173)  <state_decl>    ::= <state_decl_7> ENDSTATE ';'
174)  <system>        ::= <system_2> ENDSYSTEM ';'
175)  <deadline>      ::= DEADLINE LAZY ';'
176)  <var_decl>      ::= <var_decl_4> PRIVATE ';'
177)  <var_decl>      ::= <var_decl_4> PUBLIC ';'
178)  <system_1>      ::= <system_1a> ';'
179)  <var_decl>      ::= <var_decl_4> ';'
180)  <process_decl_1> ::= <process_decl_1c> ';'
181)  <fpar>          ::= <fpar_2> ';'
182)  <state_decl_3>  ::= <state_decl_2> ';'
183)  <state_decl_3>  ::= <state_decl_2> <state_option> ';'
184)  <label>         ::= <label_1> ';'
185)  <provided>      ::= PROVIDED <single_expression> ';'
186)  <when>          ::= <when_1> ';'
187)  <input>         ::= <input_4> ';'
188)  <terminator>    ::= <terminator_1> ';'
189)  <meta_trans_def> ::= <meta_trans_def_5> ';'
190)  <meta_trans_def> ::= <meta_trans_def_6> ';'
191)  <action>        ::= <action_a1> ';'
192)  <action>        ::= <call> ';'
193)  <action>        ::= <fork> ';'
194)  <signalroute_decl> ::= <signalroute_decl_4> ';'
195)  <signalroute_decl> ::= <signalroute_decl_5> ';'
196)  <signal_decl>   ::= <signal_decl_3> ';'
197)  <const_decl>    ::= <const_decl_1> ';'
198)  <const_decl>    ::= <const_decl_3> ';'
199)  <type_decl>     ::= <type_decl_2> <type> ';'
200)  <record_1>      ::= <record_3> ';'
201)  <abstract_1>    ::= <abstract_4> ';'
202)  <procedure_decl_2> ::= <procedure_decl_1> ';'
203)  <procedure_decl_4> ::= <procedure_decl_4a> ';'
204)  <action_a1>     ::= SKIP
205)  <state_option>  ::= STABLE
206)  <state_option>  ::= <state_option> STABLE
207)  <state_option>  ::= START
208)  <state_option>  ::= <state_option> START
209)  <state_decl_1>  ::= STATE
210)  <terminator_1>  ::= STOP
211)  <action_a1>     ::= INFORMAL STRING_EXPR
212)  <type_id>       ::= TIMER
213)  <output_6>      ::= <output_5> TO
214)  <signalroute_decl_4a> ::= <signalroute_decl_3> TO
215)  <const>         ::= TRUE
216)  <signalroute_option> ::= UNICAST
217)  <signalroute_option> ::= <signalroute_option> UNICAST
218)  <state_option>  ::= UNSTABLE
219)  <state_option>  ::= <state_option> UNSTABLE
220)  <signalroute_option> ::= URGENT
221)  <signalroute_option> ::= <signalroute_option> URGENT
222)  <var_decl_1>    ::= VAR
223)  <system_2>      ::= <system_1>
224)  <system_2>      ::= <system_2> <process_decl>
225)  <system_2>      ::= <system_2> <signalroute_decl>
226)  <system_2>      ::= <system_2> <signal_decl>
227)  <system_2>      ::= <system_2> <procedure_decl>
228)  <process_decl_3> ::= <process_decl_3> <procedure_decl>
229)  <system_2>      ::= <system_2> <var_decl>
230)  <process_decl_3> ::= <process_decl_3> <var_decl>
231)  <system_2>      ::= <system_2> <type_decl>
232)  <process_decl_3> ::= <process_decl_3> <type_decl>
233)  <system_2>      ::= <system_2> <const_decl>
234)  <process_decl_3> ::= <process_decl_3> <const_decl>
235)  <system_2>      ::= <system_2> <meta_decl>
236)  <process_decl_3> ::= <process_decl_3> <meta_decl>
237)  <procedure_decl_4a> ::= <procedure_decl_3> RETURNS <type_id>
238)  <var_decl_3>    ::= <var_decl_2> <type_id>
239)  <fpar_2>        ::= <fpar_1> <type_id>
240)  <signal_decl_2> ::= <signal_decl_1> <type_id>
241)  <signal_decl_2> ::= <signal_decl_2b> <type_id>
242)  <record_3>      ::= <record_2> <type_id>
243)  <var_decl_4>    ::= <var_decl_3>
244)  <meta_decl>     ::= META <meta_trans_def>
245)  <single_name_(> ::= <name_(>
246)  <input_1>       ::= INPUT <name_(>
247)  <output_1>      ::= OUTPUT <name_(>
248)  <process_decl_1a> ::= PROCESS <name_(>
249)  <signal_decl_1> ::= SIGNAL <name_(>
250)  <signalroute_decl_1a> ::= SIGNALROUTE <name_(>
251)  <call_1>        ::= <call_0> <name_(>
252)  <fork_1>        ::= <fork_0> <name_(>
253)  <abstract_3>    ::= <abstract_2> <name_(>
254)  <expr_1>        ::= <const>
255)  <type>          ::= <range_1> '..' <const>
256)  <array_2>       ::= <array_1b> '..' <const>
257)  <range_1>       ::= RANGE <const>
258)  <process_decl_1b> ::= <process_decl_1a> <const>
259)  <signalroute_decl_1b> ::= <signalroute_decl_1a> <const>
260)  <const_decl_3>  ::= <const_decl_2> <const>
261)  <array_1b>      ::= <array_1> <const>
262)  <string_2>      ::= <string_1> <const>
263)  <process_decl_2> ::= <process_decl_1>
264)  <process_decl_2> ::= <process_decl_1> <fpar>
265)  <procedure_decl_3> ::= <procedure_decl_2> <fpar>
266)  <process_decl_3> ::= <process_decl_2>
267)  <process_decl_3> ::= <process_decl_3> <state_decl>
268)  <state_decl_7>  ::= <state_decl_7> <state_decl>
269)  <state_decl_4>  ::= <state_decl_3>
270)  <state_decl_5>  ::= <state_decl_4>
271)  <state_decl_4>  ::= <state_decl_3> <assert>
272)  <state_decl_6>  ::= <state_decl_5>
273)  <state_decl_5>  ::= <state_decl_4> <tpc_cons>
274)  <state_decl_7>  ::= <state_decl_6>
275)  <state_decl_6>  ::= <state_decl_5> <save_signal>
276)  <state_decl_7>  ::= <state_decl_7> <trans_decl>
277)  <single_expression> ::= <expression>
278)  <assert_1>      ::= ASSERT <expression>
279)  <if_1>          ::= IF <expression>
280)  <action_a1>     ::= KILL <expression>
281)  <action_a1>     ::= RESET <expression>
282)  <tpc_cons>      ::= TPC <expression>
283)  <output_5>      ::= <output_4> VIA <expression>
284)  <when_1>        ::= WHEN <expression>
285)  <while_1>       ::= WHILE <expression>
286)  <input_2>       ::= <input_1> <expression>
287)  <input_2>       ::= <input_3> <expression>
288)  <action_a1>     ::= <action_b> <expression>
289)  <output_2>      ::= <output_1> <expression>
290)  <output_2>      ::= <output_3> <expression>
291)  <action_a1>     ::= <output_6> <expression>
292)  <call_2>        ::= <call_1> <expression>
293)  <call_2>        ::= <call_2b> <expression>
294)  <fork_2>        ::= <fork_1> <expression>
295)  <fork_2>        ::= <fork_2b> <expression>
296)  <save_signal>   ::= <save_signal_1>
297)  <trans_decl_1>  ::= <trans_decl_0>
298)  <trans_decl_0>  ::= <label>
299)  <trans_decl_0>  ::= <deadline>
300)  <trans_decl_0>  ::= <label> <deadline>
301)  <trans_decl_2>  ::= <trans_decl_1>
302)  <trans_decl_1>  ::= <provided>
303)  <trans_decl_1>  ::= <trans_decl_0> <provided>
304)  <trans_decl_3>  ::= <trans_decl_2>
305)  <trans_decl_2>  ::= <when>
306)  <trans_decl_2>  ::= <trans_decl_1> <when>
307)  <trans_decl_4>  ::= <trans_decl_3>
308)  <trans_decl_3>  ::= <input>
309)  <trans_decl_3>  ::= <trans_decl_2> <input>
310)  <trans_decl_4>  ::= <statement>
311)  <while_2>       ::= <while_1> DO <statement>
312)  <if_3>          ::= <if_2> ELSE <statement>
313)  <if_2>          ::= <if_1> THEN <statement>
314)  <trans_decl_4>  ::= <trans_decl_4> <statement>
315)  <if_2>          ::= <if_2> <statement>
316)  <if_3>          ::= <if_3> <statement>
317)  <while_2>       ::= <while_2> <statement>
318)  <trans_decl>    ::= <terminator>
319)  <trans_decl>    ::= <trans_decl_4> <terminator>
320)  <statement>     ::= <action>
321)  <statement>     ::= <if>
322)  <statement>     ::= <while>
323)  <meta_trans_def_3> ::= <from_name>
324)  <signalroute_decl_3> ::= <signalroute_decl_2> <from_name>
325)  <meta_trans_def_1> ::= <meta_trans_def_3>
326)  <action_b>      ::= SET <left_asgn>
327)  <action_b>      ::= TASK <left_asgn>
328)  <output_5>      ::= <output_4>
329)  <action_a1>     ::= <output_5>
330)  <expr_5>        ::= <expr_4>
331)  <signalroute_decl_2> ::= <signalroute_decl_1>
332)  <signalroute_decl_2> ::= <signalroute_decl_1> <signalroute_option>
333)  <signalroute_option> ::= <delay>
334)  <signalroute_option> ::= <signalroute_option> <delay>
335)  <signalroute_option> ::= <rate>
336)  <signalroute_option> ::= <signalroute_option> <rate>
337)  <expr_2>        ::= <expr_1>
338)  <expr_3>        ::= <expr_2>
339)  <expr_3>        ::= <expr_3a> <expr_2>
340)  <expr_4>        ::= <expr_3>
341)  <expr_6>        ::= <expr_5>
342)  <expr_5>        ::= NOT <expr_5>
343)  <expr_7>        ::= <expr_6>
344)  <expr_6>        ::= ACTIVE <expr_6>
345)  <expr_8>        ::= <expr_7>
346)  <expr_8>        ::= <single_+> <expr_7>
347)  <expr_8>        ::= <single_-> <expr_7>
348)  <expr_9>        ::= <expr_8>
349)  <expr_9>        ::= <expr_9> '*' <expr_8>
350)  <expr_10>       ::= <expr_9>
351)  <expr_10>       ::= <expr_10> '/' <expr_9>
352)  <expr_11>       ::= <expr_10>
353)  <expr_11>       ::= <expr_11> '%' <expr_10>
354)  <expr_12>       ::= <expr_11>
355)  <expr_12>       ::= <expr_12_+> <expr_11>
356)  <expr_12>       ::= <expr_12_-> <expr_11>
357)  <expr_13>       ::= <expr_12>
358)  <expr_13>       ::= <expr_13> '>=' <expr_12>
359)  <expr_13>       ::= <expr_13> '>' <expr_12>
360)  <expr_13>       ::= <expr_13> '<=' <expr_12>
361)  <expr_13>       ::= <expr_13> '<' <expr_12>
362)  <expr_13>       ::= <expr_13> '<>' <expr_12>
363)  <expr_13>       ::= <expr_13> <single_=> <expr_12>
364)  <expr_14>       ::= <expr_13>
365)  <expr_14>       ::= <expr_14> AND <expr_13>
366)  <expr_15>       ::= <expr_14>
367)  <expr_15>       ::= <expr_15> OR <expr_14>
368)  <expr_16>       ::= <expr_15>
369)  <expr_16>       ::= <expr_16_1> <expr_15>
370)  <expression>    ::= <expr_16>
371)  <expr_17_2>     ::= <expr_17_1> <expr_16>
372)  <expression>    ::= <expr_17_3> <expr_16>
373)  <procedure_decl_3> ::= <procedure_decl_2>
374)  <procedure_decl_4> ::= <procedure_decl_3>
375)  <procedure_decl_5> ::= <procedure_decl_4>

*/


 /**** List of SYMBOLS *****/


/*
 0 	: DOLLAR 
 1 	: ABSTRACT 
 2 	: ACTIVE 
 3 	: AND 
 4 	: ARRAY 
 5 	: ':=' 
 6 	: ASSERT 
 7 	: BOOLEAN 
 8 	: BY 
 9 	: CALL 
 10 	: CLOCK 
 11 	: CODE_EXT 
 12 	: COEFF 
 13 	: ':' 
 14 	: ',' 
 15 	: CONST 
 16 	: DEADLINE 
 17 	: DELAY 
 18 	: DELAYABLE 
 19 	: DO 
 20 	: '.' 
 21 	: '..' 
 22 	: EAGER 
 23 	: ELSE 
 24 	: ENDABSTRACT 
 25 	: ENDASSERT 
 26 	: ENDENUM 
 27 	: ENDIF 
 28 	: ENDPROCEDURE 
 29 	: ENDPROCESS 
 30 	: ENDRECORD 
 31 	: ENDSTATE 
 32 	: ENDSYSTEM 
 33 	: ENDWHILE 
 34 	: ENUM 
 35 	: ENV 
 36 	: '=' 
 37 	: FALSE 
 38 	: FIFO 
 39 	: FLOAT 
 40 	: FORK 
 41 	: FPAR 
 42 	: FROM 
 43 	: '>=' 
 44 	: '>' 
 45 	: IF 
 46 	: IN 
 47 	: INFORMAL 
 48 	: INOUT 
 49 	: INPUT 
 50 	: INTEGER 
 51 	: KILL 
 52 	: LABEL 
 53 	: LAZY 
 54 	: '<=' 
 55 	: '{' 
 56 	: '(' 
 57 	: '[' 
 58 	: LOSSY 
 59 	: '<' 
 60 	: META 
 61 	: '-' 
 62 	: MULTICAST 
 63 	: MULTISET 
 64 	: NAME 
 65 	: '<>' 
 66 	: NEXTSTATE 
 67 	: NIL 
 68 	: NOT 
 69 	: OF 
 70 	: OR 
 71 	: OUT 
 72 	: OUTPUT 
 73 	: PEER 
 74 	: '%' 
 75 	: PID 
 76 	: '+' 
 77 	: PRIVATE 
 78 	: PUBLIC 
 79 	: PROCEDURE 
 80 	: PROCESS 
 81 	: PROVIDED 
 82 	: '?' 
 83 	: RANGE 
 84 	: RATE 
 85 	: RECORD 
 86 	: RELIABLE 
 87 	: RESET 
 88 	: RETURNS 
 89 	: '}' 
 90 	: ')' 
 91 	: ']' 
 92 	: SAVE 
 93 	: SELF 
 94 	: ';' 
 95 	: SET 
 96 	: SIGNAL 
 97 	: SIGNALROUTE 
 98 	: SKIP 
 99 	: '/' 
 100 	: STABLE 
 101 	: START 
 102 	: STATE 
 103 	: STOP 
 104 	: STRING 
 105 	: STRING_EXPR 
 106 	: SYSTEM 
 107 	: TASK 
 108 	: THEN 
 109 	: TIMER 
 110 	: '*' 
 111 	: TO 
 112 	: TPC 
 113 	: TRUE 
 114 	: TYPE 
 115 	: UNICAST 
 116 	: UNSTABLE 
 117 	: URGENT 
 118 	: VAR 
 119 	: VIA 
 120 	: WHEN 
 121 	: WHILE 
 122 	: WITH 
 123 	: <system> 
 124 	: <system_2> 
 125 	: <system_1a> 
 126 	: <system_1> 
 127 	: <process_decl> 
 128 	: <signalroute_decl> 
 129 	: <signal_decl> 
 130 	: <procedure_decl> 
 131 	: <var_decl> 
 132 	: <type_decl> 
 133 	: <const_decl> 
 134 	: <meta_decl> 
 135 	: <type_id> 
 136 	: <var_decl_1> 
 137 	: <var_decl_2> 
 138 	: <var_decl_3> 
 139 	: <var_decl_4> 
 140 	: <var_decl_4a> 
 141 	: <var_decl_4b> 
 142 	: <meta_trans_def> 
 143 	: <process_decl_1a> 
 144 	: <name_(> 
 145 	: <process_decl_1b> 
 146 	: <const> 
 147 	: <process_decl_1c> 
 148 	: <process_decl_1> 
 149 	: <fpar_1> 
 150 	: <fpar_opt> 
 151 	: <fpar_2> 
 152 	: <fpar> 
 153 	: <fpar_3> 
 154 	: <process_decl_2> 
 155 	: <process_decl_3> 
 156 	: <state_decl> 
 157 	: <state_decl_1> 
 158 	: <state_decl_2> 
 159 	: <state_decl_3> 
 160 	: <state_option> 
 161 	: <state_decl_4> 
 162 	: <assert> 
 163 	: <state_decl_5> 
 164 	: <tpc_cons> 
 165 	: <state_decl_6> 
 166 	: <save_signal> 
 167 	: <state_decl_7> 
 168 	: <trans_decl> 
 169 	: <assert_1> 
 170 	: <expression> 
 171 	: <save_signal_1> 
 172 	: <save_signal_2> 
 173 	: <trans_decl_0> 
 174 	: <label> 
 175 	: <deadline> 
 176 	: <trans_decl_1> 
 177 	: <provided> 
 178 	: <trans_decl_2> 
 179 	: <when> 
 180 	: <trans_decl_3> 
 181 	: <input> 
 182 	: <trans_decl_4> 
 183 	: <statement> 
 184 	: <terminator> 
 185 	: <label_1> 
 186 	: <single_expression> 
 187 	: <when_1> 
 188 	: <input_1> 
 189 	: <input_2> 
 190 	: <input_3> 
 191 	: <input_4> 
 192 	: <action> 
 193 	: <if> 
 194 	: <while> 
 195 	: <terminator_1> 
 196 	: <if_1> 
 197 	: <if_2> 
 198 	: <if_3> 
 199 	: <while_1> 
 200 	: <while_2> 
 201 	: <from_name> 
 202 	: <meta_trans_def_3> 
 203 	: <meta_trans_def_2> 
 204 	: <meta_trans_def_1> 
 205 	: <meta_trans_def_1b> 
 206 	: <meta_trans_def_4> 
 207 	: <meta_trans_def_5> 
 208 	: <meta_trans_def_6b> 
 209 	: <meta_trans_def_6> 
 210 	: <action_a1> 
 211 	: <action_b> 
 212 	: <left_asgn> 
 213 	: <output_1> 
 214 	: <output_2> 
 215 	: <output_3> 
 216 	: <output_4> 
 217 	: <output_5> 
 218 	: <output_6> 
 219 	: <expr_4> 
 220 	: <call_0> 
 221 	: <call_1> 
 222 	: <call_2> 
 223 	: <call_2b> 
 224 	: <call> 
 225 	: <fork_0> 
 226 	: <fork_1> 
 227 	: <fork_2> 
 228 	: <fork_2b> 
 229 	: <fork> 
 230 	: <signalroute_decl_1a> 
 231 	: <signalroute_decl_1b> 
 232 	: <signalroute_decl_1> 
 233 	: <signalroute_decl_2> 
 234 	: <signalroute_option> 
 235 	: <signalroute_decl_3> 
 236 	: <signalroute_decl_4a> 
 237 	: <signalroute_decl_4> 
 238 	: <signalroute_decl_5> 
 239 	: <signalroute_decl_6> 
 240 	: <delay_1> 
 241 	: <delay_2> 
 242 	: <delay_3> 
 243 	: <delay_4> 
 244 	: <delay> 
 245 	: <rate_1> 
 246 	: <rate_2> 
 247 	: <rate_3> 
 248 	: <rate_4> 
 249 	: <rate> 
 250 	: <signal_decl_1> 
 251 	: <signal_decl_2> 
 252 	: <signal_decl_2b> 
 253 	: <signal_decl_3> 
 254 	: <const_decl_1> 
 255 	: <const_decl_2> 
 256 	: <const_decl_3> 
 257 	: <const_decl_3a> 
 258 	: <type_decl_1> 
 259 	: <type_decl_2> 
 260 	: <type> 
 261 	: <enum_1> 
 262 	: <enum_1b> 
 263 	: <range_1> 
 264 	: <array_1> 
 265 	: <array_1b> 
 266 	: <array_2> 
 267 	: <array_3> 
 268 	: <record_1> 
 269 	: <record_2> 
 270 	: <record_3> 
 271 	: <string_1> 
 272 	: <string_2> 
 273 	: <string_3> 
 274 	: <abstract_1> 
 275 	: <abstract_2> 
 276 	: <abstract_3> 
 277 	: <abstract_4> 
 278 	: <abstract_5> 
 279 	: <abstract_6> 
 280 	: <expr_1> 
 281 	: <expr_2> 
 282 	: <expr_3> 
 283 	: <expr_3a> 
 284 	: <expr_3_b1> 
 285 	: <single_name_(> 
 286 	: <function_2> 
 287 	: <expr_5> 
 288 	: <expr_6> 
 289 	: <expr_7> 
 290 	: <single_+> 
 291 	: <expr_8> 
 292 	: <single_-> 
 293 	: <expr_9> 
 294 	: <expr_10> 
 295 	: <expr_11> 
 296 	: <expr_12> 
 297 	: <expr_12_+> 
 298 	: <expr_12_-> 
 299 	: <expr_13> 
 300 	: <single_=> 
 301 	: <expr_14> 
 302 	: <expr_15> 
 303 	: <expr_16> 
 304 	: <expr_16_1> 
 305 	: <expr_17_1> 
 306 	: <expr_17_2> 
 307 	: <expr_17_3> 
 308 	: <single_(> 
 309 	: <procedure_decl_1> 
 310 	: <procedure_decl_2> 
 311 	: <procedure_decl_3> 
 312 	: <procedure_decl_4> 
 313 	: <procedure_decl_4a> 
 314 	: <procedure_decl_5> 
*/

/****  End of grammar.h  ****/
